# This file mimics what seems to be the build environment required by Ultra.
#
# It's **NOT** used by us currently, there as a reference if in the future we requires it.
# Right now what we use is the `eosio-ci-env` file with a custom branch pointing to Ultra repo
# for which we are able to build only `nodeos` and `cleos` (building other binaries hangs the CI
# image at some point, not sure why it does it).
#
# It seems also that this CI build image still requires a full recompile of clang8 and other dependencies
# when building it ...
#
# The specialized `nodeos cleos` target are hard-coded in `./cicd/build.sh` script in the
# release/ultra/2.0.x-dm branch.
#
substitutions:
  _REPOSITORY: "git@github.com:dfuse-io/eosio-eos-private.git"
  _IMAGE_TAG: ubuntu-18.04
  _BRANCH: release/ultra/2.0.x-dm # Can be either a tag or a branch, branch can be used when "testing" stuff out

steps:
# Download SSH encrypted private key and SSH known hosts file
- id: download-ssh-files
  name: 'gcr.io/cloud-builders/gsutil'
  entrypoint: 'bash'
  args:
  - '-ce'
  - |
    gsutil cp gs://${PROJECT_ID}_cloudbuild/github_id_rsa.enc /root/.ssh/github_id_rsa.enc
    gsutil cp gs://${PROJECT_ID}_cloudbuild/github_known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

- id: download-ssh-known-hosts-file
  name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://${PROJECT_ID}_cloudbuild/github_known_hosts', '/root/.ssh/known_hosts']
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Decrypting SSH encrypted private key
- id: decrypt-ssh-encrypted-private-key
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - kms
  - decrypt
  - --project=eoscanada-public
  - --ciphertext-file=/root/.ssh/github_id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=github-keys
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Initializing Git with SSH credentials and URL transformation
- id: configure-git-for-private-repositories-access
  name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-ce'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
      Hostname github.com
      IdentityFile /root/.ssh/id_rsa
    EOF

    git config --global --add url."git@github.com:dfuse-io/".insteadOf "https://github.com/dfuse-io/"
    git config --global --add url."git@github.com:eoscanada/".insteadOf "https://github.com/eoscanada/"

    # Use our own fork of ultra-fc for now since CloubBuild credentials doesn't have access to this ...
    git config --global --add url."git@github.com:dfuse-io/eosio-fc-private".insteadOf "git@github.com:ultraio/ultra-fc"
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  - name: 'git_home'
    path: /root/.git

- id: clone-source
  name: gcr.io/cloud-builders/git
  args: [
    'clone',
    '--branch=${_BRANCH}',
    '--depth=1',
    '--recursive',
    '${_REPOSITORY}',
    '/git',
  ]
  volumes:
  - name: 'git'
    path: '/git'
  - name: 'ssh'
    path: /root/.ssh
  - name: 'git_home'
    path: /root/.git

- id: docker-image
  name: gcr.io/cloud-builders/docker
  entrypoint: 'bash'
  args:
  - '-cxe'
  - |
    env

    cd /git/.devops

    docker build -t gcr.io/${PROJECT_ID}/ultra-ci:${_IMAGE_TAG}-latest .
    docker push gcr.io/${PROJECT_ID}/ultra-ci:${_IMAGE_TAG}-latest
  volumes:
  - name: 'git'
    path: '/git'

options:
  machineType: 'N1_HIGHCPU_32'

images:
- gcr.io/${PROJECT_ID}/ultra-ci:${_IMAGE_TAG}-latest

timeout: 1h
