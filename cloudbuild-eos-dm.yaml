### commit and push those values in !
substitutions:
  # Check available images with `gcloud container images list-tags gcr.io/eoscanada-shared-services/eosio-buildenv`
  _EOSIO_BUILDENV_TAG: v2.0.0
  _REPOSITORY: "git@github.com:eoscanada/eosio-eos-private.git"
  _TAG: v2.0.0-rc3-dm-v10.2
  _BRANCH: release/2.0.x-dm

steps:
# Download SSH encrypted private key and SSH known hosts file
- id: download-ssh-encrypted-private-key
  name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://${PROJECT_ID}_cloudbuild/github_id_rsa.enc', '/root/.ssh/github_id_rsa.enc']
  volumes:
  - name: 'ssh'
    path: /root/.ssh

- id: download-ssh-known-hosts-file
  name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://${PROJECT_ID}_cloudbuild/github_known_hosts', '/root/.ssh/known_hosts']
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Decrypting SSH encrypted private key
- id: decrypt-ssh-encrypted-private-key
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - kms
  - decrypt
  - --project=eoscanada-public
  - --ciphertext-file=/root/.ssh/github_id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=github-keys
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Initializing Git with SSH credentials and URL transformation
- id: configure-git-for-private-repositories-access
  name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-ce'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    git config --global --add url."git@github.com/eoscanada:".insteadOf "https://github.com/eoscanada"
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  - name: 'git_home'
    path: /root/.git

- id: eos-dfuse-clone
  name: gcr.io/cloud-builders/git
  args: [
    'clone',
    '--branch=${_BRANCH}',
    '--depth=1',
    '--recursive',
    '${_REPOSITORY}',
    '/git',
  ]
  volumes:
  - name: 'git'
    path: '/git'
  - name: 'ssh'
    path: /root/.ssh
  - name: 'git_home'
    path: /root/.git

- id: docker-build-full
  name: gcr.io/cloud-builders/docker
  args: [
    'build',
    '-t', 'gcr.io/${PROJECT_ID}/eosio-eos-full:${_TAG}',
    '-t', 'gcr.io/${PROJECT_ID}/eosio-eos-full:${_TAG}-${SHORT_SHA}',
    '-f', 'Dockerfile-eos-full',
    '--cache-from', 'gcr.io/${PROJECT_ID}/eosio-eos-full:${_TAG}',
    '--build-arg', 'EOSIO_BUILDENV_TAG=${_EOSIO_BUILDENV_TAG}',
    '--build-arg', 'SRCTAG=${_TAG}',
    '/git'
  ]
  volumes:
  - name: 'git'
    path: '/git'

# - id: deep-mind-tests
#   name: gcr.io/${PROJECT_ID}/eosio-eos-full:${_TAG}-${SHORT_SHA}
#   dir: /workspace/deep-mind/compare
#   env:
#   - "SKIP_GO_TESTS=y"
#   args: [
#     './run.sh', '/opt/eosio/bin/nodeos'
#   ]

# Perform the actual build/test step of the project
# - id: deep-mind-go-tests
#   name: gcr.io/cloud-builders/go:debian
#   entrypoint: 'sh'
#   env:
#   - CGO_ENABLED=1
#   args:
#   - '-cxe'
#   - |
#     cd /workspace/deep-mind/compare
#     go test -v ./...
#   volumes:
#   - name: 'ssh'
#     path: /root/.ssh
#   - name: 'git_home'
#     path: /root/.git

- id: docker-build-prod
  name: gcr.io/cloud-builders/docker
  args: [
    'build',
    '-t', 'gcr.io/${PROJECT_ID}/eosio-eos-prod:${_TAG}',
    '-t', 'gcr.io/${PROJECT_ID}/eosio-eos-prod:${_TAG}-${SHORT_SHA}',
    '--build-arg', 'EOS_FULL_TAG=${_TAG}-${SHORT_SHA}',
    '-f', 'Dockerfile-eos-prod',
    '.'
  ]

options:
  machineType: 'N1_HIGHCPU_32'

images:
- gcr.io/$PROJECT_ID/eosio-eos-full:${_TAG}
- gcr.io/$PROJECT_ID/eosio-eos-full:${_TAG}-${SHORT_SHA}
- gcr.io/$PROJECT_ID/eosio-eos-prod:${_TAG}-${SHORT_SHA}

timeout: 1h
