### Commit and push those values in!
substitutions:
  _REPOSITORY: "git@github.com:dfuse-io/eos.git"
  _BRANCH: v2.0.5wax01-dm-12.0 # Can be either a tag or a branch, branch can be used when "testing" stuff out
  _VERSION: v2.0.5wax01-dm-12.0
  _IMAGE_TAG: ubuntu-18.04
  _OS: ubuntu-18.04
  _PKGTYPE: deb

steps:
# Download SSH encrypted private key and SSH known hosts file
- id: download-ssh-files
  name: 'gcr.io/cloud-builders/gsutil'
  entrypoint: 'bash'
  args:
  - '-ce'
  - |
    gsutil cp gs://${PROJECT_ID}_cloudbuild/github_id_rsa.enc /root/.ssh/github_id_rsa.enc
    gsutil cp gs://${PROJECT_ID}_cloudbuild/github_known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Decrypting SSH encrypted private key
- id: decrypt-ssh-encrypted-private-key
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - kms
  - decrypt
  - --project=eoscanada-public
  - --ciphertext-file=/root/.ssh/github_id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=github-keys
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Initializing Git with SSH credentials and URL transformation
- id: configure-git-for-private-repositories-access
  name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-ce'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
      Hostname github.com
      IdentityFile /root/.ssh/id_rsa
    EOF

    git config --global --add url."git@github.com:dfuse-io/".insteadOf "https://github.com/dfuse-io/"
    git config --global --add url."git@github.com:eoscanada/".insteadOf "https://github.com/eoscanada/"
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  - name: 'git_home'
    path: /root/.git

- id: cloning source code
  name: gcr.io/cloud-builders/git
  args: [
    'clone',
    '--branch=${_BRANCH}',
    #    '--depth=1', # this prevents the 'describe' command from finding the tag
    '--recursive',
    '${_REPOSITORY}',
    '/git',
  ]
  volumes:
  - name: 'git'
    path: '/git'
  - name: 'ssh'
    path: /root/.ssh
  - name: 'git_home'
    path: /root/.git

- id: building source code
  name: gcr.io/cloud-builders/docker
  entrypoint: 'bash'
  env:
  # The ARGS is used for `docker run <ARGS>` part, and in CloudBuild, the source mount volume must be the volume name not the path! See `volumes`
  - ARGS=--rm --init -v git:/workdir
  - MOUNTED_DIR=/workdir
  - PLATFORM_TYPE=pinned
  - IMAGE_TAG=${_IMAGE_TAG}-pinned
  # Supports for both <= 2.0.7 and >= 2.0.8
  - IMAGE_NAME=gcr.io/${PROJECT_ID}/eosio-ci        # Used by <= 2.0.7
  - MIRROR_REGISTRY=gcr.io/${PROJECT_ID}/eosio-ci   # Used by >= 2.0.8
  args:
  - '-cxe'
  - |
    env

    cd /git
    ./.cicd/build.sh
  volumes:
  - name: 'git'
    path: '/git'

- id: package distribution
  name: gcr.io/cloud-builders/docker
  entrypoint: 'bash'
  env:
  # The ARGS is used for `docker run <ARGS>` part, and in CloudBuild, the source mount volume must be the volume name not the path! See `volumes`
  - ARGS=--rm --init -v git:/workdir
  - MOUNTED_DIR=/workdir
  - PLATFORM_TYPE=pinned
  - IMAGE_TAG=${_IMAGE_TAG}-pinned
  - OS=${_OS}
  - PKGTYPE=${_PKGTYPE}
  # Supports for both <= 2.0.7 and >= 2.0.8
  - IMAGE_NAME=gcr.io/${PROJECT_ID}/eosio-ci        # Used by <= 2.0.7
  - MIRROR_REGISTRY=gcr.io/${PROJECT_ID}/eosio-ci   # Used by >= 2.0.8
  args:
  - '-cxe'
  - |
    env

    cd /git
    ./.cicd/package.sh
  volumes:
  - name: 'git'
    path: '/git'

- id: docker-build-prod
  name: gcr.io/cloud-builders/docker
  args: [
    'build',
    '-t', 'gcr.io/$PROJECT_ID/eosio-wax-prod:${_VERSION}-${_OS}',
    '-f', 'wax-${_IMAGE_TAG}.dockerfile',
    '--build-arg', 'VERSION=${_VERSION}',
    '/git/build/packages'
  ]
  volumes:
  - name: 'git'
    path: '/git'

- id: docker-tag-untested
  name: gcr.io/cloud-builders/docker
  args: [
    'tag',
    'gcr.io/$PROJECT_ID/eosio-wax-prod:${_VERSION}-${_OS}',
    'gcr.io/$PROJECT_ID/eosio-wax-prod:${_VERSION}-${_OS}-untested',
  ]
  volumes:
  - name: 'git'
    path: '/git'

- id: docker-push-untested
  name: gcr.io/cloud-builders/docker
  args: [
    'push',
    'gcr.io/$PROJECT_ID/eosio-wax-prod:${_VERSION}-${_OS}-untested',
  ]
  volumes:
  - name: 'git'
    path: '/git'

# Perform the actual build/test step of the project
# - id: deep-mind-nodeos-tests
#   name: gcr.io/$PROJECT_ID/eosio-wax-prod:${_VERSION}-${_OS}
#   entrypoint: bash
#   args:
#   - '-cxe'
#   - |
#     if [[ "${_VERSION}" =~ "dm" ]]; then
#       cd /workspace/deep-mind/compare
#       SKIP_GO_TESTS=y ./run.sh wax-2.x /usr/bin/nodeos
#     fi

# - id: deep-mind-go-tests
#   name: gcr.io/cloud-builders/go:debian
#   entrypoint: 'bash'
#   env:
#   - CGO_ENABLED=1
#   - GOPRIVATE=github.com/eoscanada/*,github.com/dfuse-io/*
#   args:
#   - '-cxe'
#   - |
#     if [[ "${_VERSION}" =~ "dm" ]]; then
#       cd /workspace/deep-mind/compare
#       TARGET=wax-2.x go test -v ./...
#     fi
#   volumes:
#   - name: 'ssh'
#     path: /root/.ssh
#   - name: 'git_home'
#     path: /root/.git

- id: package copy to bucket
  name: gcr.io/cloud-builders/gsutil
  args: [
    'cp',
    '/git/build/packages/*.${_PKGTYPE}',
    'gs://eoscanada-shared-services_cloudbuild/packages/wax/${_OS}/',
  ]
  volumes:
  - name: 'git'
    path: '/git'

options:
  machineType: 'N1_HIGHCPU_32'

images:
- gcr.io/$PROJECT_ID/eosio-wax-prod:${_VERSION}-${_OS}

timeout: 1h
